{
	"information_for_contributors": [
		"Copyright © 2020 Herbert Bärschneider",
		"This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.",
		"This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",
		"You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>."
	  ],
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Assembler",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.asm",
				"match": ";.*$"
			}]
		},
		"constants": {
			"patterns": [{
				"name": "constant.language.register.asm",
				"match": "\\b((?-i)(R0|R1|R2|R3|R4|R5|R6|R7|R8|R9|R10|R11|R12|BP|SP|RA))\\b"	
			},
			{
				"name": "constant.numeric.asm",
				"match": "\\b(0b[0-1]+|0x[0-9a-fA-F]+|[0-9]+)\\b"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.asm",
				"match": "\\b((?i)(BRCS|BREQ|BRMI|BRCC|BRNE|BRPL|RCALL|RRET|JMP|JMPs|BRK|RETI))\\b"
			},
			{
				"name": "keyword.other.directive.asm",
				"match": "\\b((?i)(\\.reg|\\.long|\\.org|\\.const|\\.include|\\.word|\\.dorg|\\.data))\\b"
			},
			{
				"name": "keyword.other.macro.asm",
				"match": "\\b((?i)(POP|RET|CALL|DEC|LEAVE|LEAVEI|ENTER|ENTERI|_SCALL|PUSH|INC))\\b"
			},
			{
				"name": "keyword.operator.asm",
				"match": "\\b((?i)(NOP|MOV|ADD|ADC|SUB|SBC|AND|OR|EOR|LDI|LDIs|ADDI|ADDIs|ADCI|ADCIs|SUBI|SUBIs|SBCI|SBCIs|ANDI|ANDIs|ORI|ORIs|EORI|EORIs|MUL|MULI|MULIs|CMP|CPI|CPIs|LSL|LSR|ROL|ROR|ASR|SWAP|SWAPN|ST|LD|STS|STSs|LDS|LDSs|STD|LDD|OUT|OUTs|OUTR|IN|INs|INR))\\b"
			}
		]
		},
		"strings": {
			"name": "string.quoted.double.asm",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.asm",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.asm"
}